{"version":3,"sources":["webpack:///./src/sections/hero/HeroPersonal.js","webpack:///./src/pages/personal/index.js"],"names":["HeroPersonal","props","updateDimensions","state","height","window","innerHeight","setState","width","innerWidth","componentDidMount","this","addEventListener","pageYOffset","document","body","e","i","X","clientX","Y","clientY","element","getElementsByClassName","length","style","transform","componentWillUnmount","removeEventListener","render","Section","styled","section","background","childImageSharp","fluid","src","Overlay","div","Heading","SubHeading","h2","Type","gradientAnimation","keyframes","HeadingBox","Resume","a","id","className","text","options","strings","autoStart","loop","href","shapes","MoveUp","MoveDown","Shape","img","map","value","index","left","bottom","Math","random","key","node","alt","floor","React","Component","query","edges","Index","site","data","meta","title","name","content","description","isHome","sections","AboutPersonal","ServicesThree","PortfolioThree","TestimonialsThree","ClientsThree","ContactPersonal"],"mappings":"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","file":"component---src-pages-personal-index-js-138e7d6b4ee80739a641.js","sourcesContent":["import React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport Typewriter from 'typewriter-effect'\r\nimport Glitch from 'components/glitch'\r\nclass HeroPersonal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            height: 0,\r\n            width: 0\r\n        }\r\n    }\r\n\r\n    updateDimensions = () => {\r\n        if (this.state.height !== window.innerHeight) {\r\n            this.setState({height: window.innerHeight})\r\n        }\r\n        if (this.state.width !== window.innerWidth) {\r\n            this.setState({width: window.innerWidth})\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.setState({height: window.innerHeight, width: window.innerWidth})\r\n        window.addEventListener('resize', this.updateDimensions)\r\n        if (window.pageYOffset < window.innerHeight) {\r\n            document.body.addEventListener('mousemove', (e) => {\r\n                var X = (e.clientX * -.05 / 8);\r\n                var Y = (e.clientY * -.05 / 8);\r\n                var element = document.getElementsByClassName(\"parallax-hero-item\");  \r\n                var i;\r\n                for (i = 0; i < element.length; i++) {\r\n                    element[i].style.transform=`translate(${X}px, ${Y}px)`\r\n                }\r\n            });\r\n        }\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateDimensions)\r\n    }\r\n\r\n    render() {\r\n\r\n        const Section = styled.section`\r\n            position: relative;\r\n            .particles {\r\n                position: absolute;\r\n                width: 100%;\r\n                height: 100%;\r\n            }\r\n            background-image: url(${this.props.background.childImageSharp.fluid.src});\r\n            background-size: cover;\r\n            background-repeat: no-repeat;\r\n        `\r\n\r\n        const Overlay = styled.div`\r\n            width: 100%;\r\n            display: flex;\r\n            align-items: center;\r\n            background-color: rgba(0,0,0,.7);\r\n        `\r\n\r\n        const Heading = styled.div`\r\n            .glitch {\r\n                font-size: 140px;\r\n                line-height: 140px;\r\n                font-weight: 600;\r\n                color: #fff;\r\n                @media (max-width: 767px) {\r\n                    font-size: 40px;\r\n                    line-height: 50px;\r\n                }\r\n            }\r\n        `\r\n\r\n        const SubHeading = styled.h2`\r\n            font-size: 18px;\r\n            font-weight: 300;\r\n            color: #ccc;\r\n            text-transform: uppercase;\r\n            letter-spacing: 4px;\r\n        `\r\n        const Type = styled.div`\r\n            font-size: 50px;\r\n            line-height: 50px;\r\n            color: #fff;\r\n            text-transform: uppercase;\r\n            margin-left: 6px;\r\n            @media (min-width:768px) and (max-width:1500px) {\r\n                font-size: 23px;\r\n                line-height: 20px;\r\n            }\r\n            @media (max-width:767px) {\r\n                font-size: 20px;\r\n                line-height: 20px;\r\n            }\r\n            span {\r\n                font-family: Teko;\r\n            }\r\n        `\r\n        const gradientAnimation = keyframes`\r\n            0% {\r\n              background-position: 15% 0%;\r\n            }\r\n            50% {\r\n              background-position: 85% 100%;\r\n            }\r\n            100% {\r\n              background-position: 15% 0%;\r\n            }\r\n          `\r\n          \r\n\r\n        const HeadingBox = styled.div`\r\n            height: 500px;\r\n            width: 900px;\r\n            margin: auto;\r\n            position: relative;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            flex-direction: column;\r\n            position: relative;\r\n            &:after {\r\n                content: '';\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                right: 0;\r\n                bottom: 0;\r\n                border-radius: 5px;\r\n                background: linear-gradient(120deg, #04e5e5, #f37055, #ef4e7b, #a166ab, #5073b8, #1098ad, #07b39b, #6fba82);\r\n                background-size: 300% 300%;\r\n                clip-path: polygon(0% 100%, 10px 100%, 10px 10px, calc(100% - 10px) 10px, calc(100% - 10px) calc(100% - 10px), 10px calc(100% - 10px), 10px 100%, 100% 100%, 100% 0%, 0% 0%);\r\n            }\r\n            &.animate:after {\r\n                animation: ${gradientAnimation} 2s ease-in-out infinite;\r\n            }\r\n            @media (max-width: 767px) {\r\n                height: 350px;\r\n            }\r\n        `\r\n\r\n        const Resume = styled.a`\r\n            color: #fff;\r\n            text-decoration: none;\r\n            border-bottom: 2px solid;\r\n            font-weight: 300;\r\n            transition: .5s;\r\n            margin-top: 40px;\r\n            &:hover {\r\n                color: #fff;\r\n                text-decoration: none;\r\n                border-color: #04e5e5;\r\n            }\r\n        `\r\n\r\n        return (\r\n            <Section id=\"home\">\r\n                <Overlay style={{height: `${this.state.width > 500 ? this.state.height : 350}px`}}>\r\n                    <HeadingBox  className=\"parallax-hero-item animate\">\r\n                        <SubHeading className=\"parallax-hero-item\">\r\n                            Hello, I'm\r\n                        </SubHeading>\r\n                        <Heading className=\"parallax-hero-item\">\r\n                            <Glitch text=\"John Doe\" />\r\n                        </Heading>\r\n                        <Type className=\"parallax-hero-item\">\r\n                            <Typewriter\r\n                                options={{\r\n                                strings: [\r\n                                    'App Developer',\r\n                                    'Web Designer',\r\n                                    'UX Developer',\r\n                                ],\r\n                                autoStart: true,\r\n                                loop: true,\r\n                                }}\r\n                            />\r\n                        </Type>\r\n                        <Resume href=\"./\">\r\n                            Download Resume\r\n                        </Resume>\r\n                    </HeadingBox>\r\n                    {this.shapes()}\r\n                </Overlay>\r\n            </Section>\r\n        )\r\n    }\r\n\r\n    shapes() {\r\n\r\n        const MoveUp = keyframes`\r\n            0% { \r\n                transform: translateY(0);\r\n            }\r\n            100% {\r\n                transform: translateY(-40px);\r\n            }\r\n        `\r\n\r\n        const MoveDown = keyframes`\r\n            0% { \r\n                transform: translateY(0);\r\n            }\r\n            100% {\r\n                transform: translateY(40px);\r\n            }\r\n        `\r\n        const Shape = styled.img`\r\n            position: absolute;\r\n            height: 50px;\r\n            &.move-up {\r\n                animation: ${MoveUp} 3s infinite alternate;\r\n            }\r\n            &.move-down {\r\n                animation: ${MoveDown} 3s infinite alternate;\r\n            }\r\n            @media (max-width: 767px) {\r\n                height: 20px;\r\n            }\r\n        `\r\n        \r\n\r\n\r\n        return this.props.shapes.map((value, index) => {\r\n            return (\r\n                <Shape\r\n                    style={{\r\n                        left: `${(index+1) * 10}%`,\r\n                        bottom: `${Math.random() *\r\n                        (+((index+1) % 2 === 0 ? 10 : 90) - +((index+1) % 2 === 0 ? 5 : 80)) +\r\n                        +((index+1) % 2 === 0 ? 5 : 80)}%`,\r\n                    }}\r\n                    key={index}\r\n                    src={value.node.childImageSharp.fluid.src}\r\n                    alt=\"shape\"\r\n                    className={Math.floor(Math.random() * 10) % 2 === 0 ? \"move-up\" : \"move-down\"}\r\n                />\r\n            )\r\n        })\r\n    }\r\n}\r\nexport default props => (\r\n    <StaticQuery\r\n      query={graphql`\r\n      query {\r\n        background: file(relativePath: {eq: \"background-poly.jpg\"}) {\r\n          childImageSharp {\r\n            fluid(maxWidth: 2000, quality: 100) {\r\n              src\r\n            }\r\n          }\r\n        }\r\n        shapes: allFile(filter: {extension: {regex: \"/(png)/\"}, relativeDirectory: {eq: \"shapes\"}}) {\r\n          edges {\r\n            node {\r\n              childImageSharp {\r\n                fluid(maxWidth: 100) {\r\n                  src\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }      \r\n      `}\r\n      render={({ background, shapes }) => <HeroPersonal background={background} shapes={shapes.edges} {...props} />}\r\n    />\r\n  )","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport Helmet from 'react-helmet'\r\nimport Layout from 'components/layout'\r\nimport HeroPersonal from 'sections/hero/HeroPersonal.js'\r\nimport AboutPersonal from 'sections/about/AboutPersonal.js'\r\nimport ServicesThree from 'sections/services/ServicesThree.js'\r\nimport PortfolioThree from 'sections/portfolio/PortfolioThree.js'\r\nimport TestimonialsThree from 'sections/testimonials/TestimonialsThree.js'\r\nimport ClientsThree from 'sections/clients/ClientsThree.js'\r\nimport ContactPersonal from 'sections/contact/ContactPersonal.js'\r\n\r\nclass Index extends React.Component {\r\n\r\n  render() {\r\n    \r\n    const { site } = this.props.data\r\n\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <title>{site.meta.title}</title>\r\n          <meta name=\"description\" content={site.meta.description} />\r\n        </Helmet>\r\n        <Layout\r\n          isHome={true}\r\n          sections={['home', 'about', 'services', 'portfolio', 'testimonials', 'clients', 'contact']}\r\n        >\r\n          <HeroPersonal />\r\n          <AboutPersonal />\r\n          <ServicesThree />\r\n          <PortfolioThree />\r\n          <TestimonialsThree />\r\n          <ClientsThree />\r\n          <ContactPersonal />\r\n        </Layout>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Index\r\n\r\nexport const personalQuery = graphql`\r\n  query {\r\n    site {\r\n      meta: siteMetadata {\r\n        title\r\n        description\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}