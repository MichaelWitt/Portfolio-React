{"version":3,"sources":["webpack:///./src/template/project-details.js","webpack:///./src/elements/image.js"],"names":["ProjectDetails","data","projectData","projectJson","projectImage","features","className","title","category","client","imgesBY","body","fluid","featured_image","childImageSharp","map","index","key","image","NonStretchedImage","props","alignment","normalizedProps","aspectRatio","align","presentationWidth","style","maxWidth","margin"],"mappings":"8FAAA,yFAgHeA,UA1GQ,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClBC,EAAcD,EAAKE,YACnBC,EAAeH,EAAKE,YAAYE,SACtC,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,yDACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,YACb,wBAAIA,UAAU,gBAAgBJ,EAAYK,QAE5C,wBAAID,UAAU,UAAd,WACA,wBAAIA,UAAU,eACZ,4BACE,0BAAMA,UAAU,QACd,kBAAC,IAAD,MADF,aAIA,0BAAMA,UAAU,eACbJ,EAAYM,WAGjB,4BACE,0BAAMF,UAAU,QACd,kBAAC,IAAD,MADF,WAIA,0BAAMA,UAAU,eACbJ,EAAYO,SAGjB,4BACE,0BAAMH,UAAU,QACd,kBAAC,IAAD,MADF,cAIA,0BAAMA,UAAU,eACbJ,EAAYQ,WAInB,uBAAGJ,UAAU,UAAUJ,EAAYS,UAK3C,yBAAKL,UAAU,wCACb,kBAAC,IAAD,CACEM,MAAOV,EAAYW,eAAeC,gBAAgBF,SAItD,yBAAKN,UAAU,eACZF,EAAaW,KAAI,SAACd,EAAMe,GAAP,OAChB,yBAAKV,UAAU,sBAAsBW,IAAKD,GACxC,kBAAC,IAAD,CAAKJ,MAAOX,EAAKiB,MAAMJ,gBAAgBF,qB,kCCnE7D,8CA6BeO,IA1BW,SAAAC,GACtB,IAEIC,EAFAC,EAAkBF,EAsBtB,OArBAE,EAAe,iBAAOA,EAAgBV,MAAvB,CAA8BW,YAAa,IAGtDF,EADe,UAAhBD,EAAMI,MACO,aACU,SAAhBJ,EAAMI,MACA,aAEA,SAGZJ,EAAMR,OAASQ,EAAMR,MAAMa,oBAC3BH,EAAe,iBACRF,EADQ,CAEXM,MAAM,OAAD,UACGN,EAAMM,OAAS,GADlB,CAEDC,SAAUP,EAAMR,MAAMa,kBACtBG,OAAQP,OAKb,kBAAC,IAAQC","file":"component---src-template-project-details-js-2a8b812f45d44b9cb3f9.js","sourcesContent":["import React from \"react\";\r\nimport Img from \"gatsby-image\";\r\nimport Image from \"../elements/image\";\r\nimport { FiList, FiUser, FiInstagram } from \"react-icons/fi\";\r\nimport Layout from \"../components/layout\";\r\n\r\nconst ProjectDetails = ({ data }) => {\r\n  const projectData = data.projectJson;\r\n  const projectImage = data.projectJson.features;\r\n  return (\r\n    <Layout>\r\n      <div className=\"rn-project-details-area rn-section-gap bg-color-white\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"inner\">\r\n                <div className=\"portfolio-content\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-12 col-md-12 col-12\">\r\n                      <div className=\"content-left\">\r\n                        <div className=\"page-top\">\r\n                          <h1 className=\"title_holder\">{projectData.title}</h1>\r\n                        </div>\r\n                        <h3 className=\"mt--20\">Details</h3>\r\n                        <ul className=\"list_holder\">\r\n                          <li>\r\n                            <span className=\"icon\">\r\n                              <FiList />\r\n                              Category:\r\n                            </span>\r\n                            <span className=\"projectinfo\">\r\n                              {projectData.category}\r\n                            </span>\r\n                          </li>\r\n                          <li>\r\n                            <span className=\"icon\">\r\n                              <FiUser />\r\n                              Client:\r\n                            </span>\r\n                            <span className=\"projectinfo\">\r\n                              {projectData.client}\r\n                            </span>\r\n                          </li>\r\n                          <li>\r\n                            <span className=\"icon\">\r\n                              <FiInstagram />\r\n                              Images by:\r\n                            </span>\r\n                            <span className=\"projectinfo\">\r\n                              {projectData.imgesBY}\r\n                            </span>\r\n                          </li>\r\n                        </ul>\r\n                        <p className=\"mt--20\">{projectData.body}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"thumbnail mt--90 mt_md--40 mt_sm--40\">\r\n                  <Image\r\n                    fluid={projectData.featured_image.childImageSharp.fluid}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"image-group\">\r\n                  {projectImage.map((data, index) => (\r\n                    <div className=\"single-image mt--30\" key={index}>\r\n                      <Img fluid={data.image.childImageSharp.fluid} />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query($id: String!) {\r\n    projectJson(id: { eq: $id }) {\r\n      id\r\n      title\r\n      body\r\n      category\r\n      client\r\n      imgesBY\r\n      featured_image {\r\n        childImageSharp {\r\n          fluid(maxHeight: 1000, maxWidth: 1920, quality: 100) {\r\n            ...GatsbyImageSharpFluid_withWebp\r\n            presentationHeight\r\n            presentationWidth\r\n          }\r\n        }\r\n      }\r\n      features {\r\n        image {\r\n          childImageSharp {\r\n            fluid(maxWidth: 1920, maxHeight: 1280, quality: 100) {\r\n              ...GatsbyImageSharpFluid_withWebp\r\n              presentationWidth\r\n              presentationHeight\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default ProjectDetails;\r\n","import React from \"react\";\r\nimport Img from \"gatsby-image\";\r\n\r\nconst NonStretchedImage = props => {\r\n    let normalizedProps = props\r\n    normalizedProps = {...normalizedProps.fluid, aspectRatio: 1}\r\n    let alignment;\r\n    if(props.align === 'right'){\r\n        alignment = '0 0 0 auto'\r\n    } else if(props.align === 'left'){\r\n        alignment = '0 auto 0 0'\r\n    }else{\r\n        alignment = '0 auto'\r\n    }\r\n\r\n    if (props.fluid && props.fluid.presentationWidth) {\r\n        normalizedProps = {\r\n            ...props,\r\n            style: {\r\n                ...(props.style || {}),\r\n                maxWidth: props.fluid.presentationWidth,\r\n                margin: alignment, \r\n            },\r\n        }\r\n    }\r\n\r\n    return <Img {...normalizedProps} />\r\n}\r\n\r\nexport default NonStretchedImage;"],"sourceRoot":""}