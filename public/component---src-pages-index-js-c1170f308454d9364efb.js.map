{"version":3,"sources":["webpack:///./src/sections/hero/Hero.js","webpack:///./src/pages/index.js"],"names":["Hero","props","updateDimensions","state","height","window","innerHeight","setState","width","innerWidth","componentDidMount","this","addEventListener","componentWillUnmount","removeEventListener","render","Section","styled","section","background","childImageSharp","fluid","src","Overlay","div","Heading1","h1","Heading2","h2","Type","Content","Separator","BottomContent","ServiceCol","Col","Service","ServiceContent","ServiceHeading","h4","ServiceSeparator","ServiceIcon","ServiceText","p","id","style","options","strings","autoStart","loop","md","borderRight","webexpertIcon","alt","mobileIcon","seoIcon","React","Component","query","Index","site","data","meta","title","name","content","description","isHome","sections"],"mappings":"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","file":"component---src-pages-index-js-c1170f308454d9364efb.js","sourcesContent":["import React from 'react'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\nimport styled from 'styled-components'\r\nimport Typewriter from 'typewriter-effect'\r\n\r\nclass Hero extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            height: 0,\r\n            width: 0\r\n        }\r\n    }\r\n\r\n    updateDimensions = () => {\r\n        if (this.state.height !== window.innerHeight) {\r\n            this.setState({height: window.innerHeight})\r\n        }\r\n        if (this.state.width !== window.innerWidth) {\r\n            this.setState({width: window.innerWidth})\r\n        }\r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n        this.setState({height: window.innerHeight, width: window.innerWidth})\r\n        window.addEventListener('resize', this.updateDimensions)\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateDimensions)\r\n    }\r\n\r\n    render() {\r\n\r\n        const Section = styled.section`\r\n            position: relative;\r\n            .particles {\r\n                position: absolute;\r\n                width: 100%;\r\n                height: 100%;\r\n            }\r\n            background-image: url(${this.props.background.childImageSharp.fluid.src});\r\n            background-size: cover;\r\n            background-repeat: no-repeat;\r\n        `\r\n\r\n        const Overlay = styled.div`\r\n            width: 100%;\r\n            display: flex;\r\n            align-items: center;\r\n            background-color: rgba(0,0,0,.5);\r\n        `\r\n\r\n        const Heading1 = styled.h1`\r\n            font-size: 80px;\r\n            font-family: Teko;\r\n            line-height: 40px;\r\n            color: #fff;\r\n            font-weight: 400;\r\n            text-transform: uppercase;\r\n            @media (min-width:768px) {\r\n                margin-left: 4px;\r\n            }\r\n            @media (max-width:767px) {\r\n                margin-left: 2px;\r\n            }\r\n            @media (min-width:768px) and (max-width:1500px) {\r\n                font-size: 40px;\r\n            }\r\n            @media (max-width:767px) {\r\n                font-size: 20px;\r\n                line-height: 20px;\r\n            }\r\n        `\r\n\r\n        const Heading2 = styled.h2`\r\n            font-size: 120px;\r\n            color: #fff;\r\n            font-weight: 700;\r\n            text-transform: uppercase;\r\n            background: -webkit-linear-gradient(left, #00ffff , #007a7a);\r\n            background: -o-linear-gradient(right, #00ffff, #007a7a);\r\n            background: -moz-linear-gradient(right, #00ffff, #007a7a);\r\n            background: linear-gradient(to right, #00ffff , #007a7a); \r\n           -webkit-background-clip: text;\r\n           -webkit-text-fill-color: transparent;\r\n            @media (max-width:767px) {\r\n                font-size: 40px;\r\n                line-height: 40px;\r\n            }\r\n           @media (min-width:768px) and (max-width:1500px) {\r\n                font-size: 70px;\r\n            }\r\n        `\r\n\r\n        const Type = styled.div`\r\n            font-size: 50px;\r\n            line-height: 50px;\r\n            color: #fff;\r\n            text-transform: uppercase;\r\n            @media (min-width:768px) {\r\n                margin-left: 6px;\r\n            }\r\n            @media (max-width:767px) {\r\n                margin-left: 2px;\r\n            }\r\n            @media (min-width:768px) and (max-width:1500px) {\r\n                font-size: 23px;\r\n                line-height: 20px;\r\n            }\r\n            @media (max-width:767px) {\r\n                font-size: 20px;\r\n                line-height: 20px;\r\n            }\r\n            span {\r\n                font-family: Teko;\r\n            }\r\n        `\r\n        const Content = styled.div`\r\n            position: relative;\r\n            z-index: 10\r\n        `\r\n\r\n        const Separator = styled.div`\r\n            height: 5px;\r\n            width: 50px;\r\n            background-color: #04e5e5;\r\n            margin-bottom: 30px;\r\n            @media (min-width:768px) {\r\n                margin-left: 6px;\r\n            }\r\n            @media (max-width:767px) {\r\n                margin-left: 2px;\r\n            }\r\n        `\r\n\r\n        const BottomContent = styled.div`\r\n            position: absolute;\r\n            width: 100%;\r\n            bottom: -14%;\r\n            z-index: 2;\r\n            @media (min-width:1025px) and (max-width: 1400px) {    \r\n                bottom: -35%;\r\n            }\r\n            @media (max-width:767px) {\r\n                position: relative;\r\n                bottom: 0;\r\n            } \r\n            @media (min-width:768px) and (max-width: 1023px) {    \r\n                bottom: -25%;\r\n            }\r\n        `\r\n\r\n        const ServiceCol = styled(Col)`\r\n            padding: 0;\r\n            border-right: #444;\r\n            &.no-border {\r\n                border-right: none;\r\n            }\r\n            @media (max-width:500px) {\r\n                border-right:none;\r\n            }\r\n        `\r\n\r\n        const Service = styled.div`\r\n            min-height: 300px;\r\n            background-color: #111;\r\n            transition: .2s;\r\n            display: flex;\r\n            justify-content: center;\r\n            flex-direction: column;\r\n            &:hover {\r\n                background-color: #222;\r\n            }\r\n        `\r\n        const ServiceContent = styled.div`\r\n            padding: 40px;\r\n            color: #fff;\r\n        `\r\n        const ServiceHeading = styled.h4`\r\n            font-size: 30px;\r\n            font-weight: 400;\r\n            font-family: Teko;\r\n        `\r\n        const ServiceSeparator = styled.div`\r\n            height: 5px;\r\n            width: 50px;\r\n            background-color: #04e5e5;\r\n            margin-bottom: 10px;\r\n        `\r\n\r\n        const ServiceIcon = styled.div`\r\n            margin-bottom: 20px;\r\n            img {\r\n                max-height: 70px;\r\n            }\r\n        `\r\n\r\n        const ServiceText = styled.p`\r\n            font-size: 14px;\r\n            font-weight: 300;\r\n            color: #c5c5c5;\r\n        `\r\n        \r\n        return (\r\n                <Section id=\"home\">\r\n                    <Overlay style={{height: `${this.state.width > 500 ? this.state.height : 350}px`}}>\r\n                        <Container>\r\n                            <Content>\r\n                                <Heading1>\r\n                                    Creative\r\n                                </Heading1>\r\n                                <Heading2>\r\n                                    Digital Agency\r\n                                </Heading2>\r\n                                <Separator/>\r\n                                <Type>\r\n                                    <Typewriter\r\n                                        options={{\r\n                                        strings: [\r\n                                            'App Developers',\r\n                                            'Web Designers',\r\n                                            'UX Designers',\r\n                                        ],\r\n                                        autoStart: true,\r\n                                        loop: true,\r\n                                        }}\r\n                                    />\r\n                                </Type>\r\n                            </Content>\r\n                        </Container>\r\n                    </Overlay>\r\n                    <BottomContent>\r\n                            <Container>\r\n                                <Row>\r\n                                    <ServiceCol md={4} style={{borderRight: this.state.width > 500 ? \"1px solid #444\" : \"none\"}}>\r\n                                        <Service>\r\n                                            <ServiceContent>\r\n                                                <ServiceIcon>\r\n                                                    <img src={this.props.webexpertIcon.childImageSharp.fluid.src} alt=\"web experts\" />\r\n                                                </ServiceIcon>\r\n                                                <ServiceHeading>Web Experts</ServiceHeading>\r\n                                                <ServiceSeparator/>\r\n                                                <ServiceText>\r\n                                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. In vitae ultricies lacus, vitae varius velit. \r\n                                                    Pellentesque blandit libero eu turpis condimentum bibendum.\r\n                                                </ServiceText>\r\n                                            </ServiceContent>\r\n                                        </Service>\r\n                                    </ServiceCol>\r\n                                    <ServiceCol md={4} style={{borderRight: this.state.width > 500 ? \"1px solid #444\" : \"none\"}}>\r\n                                        <Service>\r\n                                            <ServiceContent>\r\n                                                <ServiceIcon>\r\n                                                        <img src={this.props.mobileIcon.childImageSharp.fluid.src} alt=\"mobile experts\" />\r\n                                                </ServiceIcon>\r\n                                                <ServiceHeading>Mobile Experts</ServiceHeading>\r\n                                                <ServiceSeparator/>\r\n                                                <ServiceText>\r\n                                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. In vitae ultricies lacus, vitae varius velit. \r\n                                                    Pellentesque blandit libero eu turpis condimentum bibendum.\r\n                                                </ServiceText>\r\n                                            </ServiceContent>\r\n                                        </Service>\r\n                                    </ServiceCol>\r\n                                    <ServiceCol md={4}>\r\n                                        <Service>\r\n                                            <ServiceContent>\r\n                                                <ServiceIcon>\r\n                                                        <img src={this.props.seoIcon.childImageSharp.fluid.src} alt=\"seo experts\" />\r\n                                                </ServiceIcon>\r\n                                                <ServiceHeading>SEO Experts</ServiceHeading>\r\n                                                <ServiceSeparator/>\r\n                                                <ServiceText>\r\n                                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. In vitae ultricies lacus, vitae varius velit. \r\n                                                    Pellentesque blandit libero eu turpis condimentum bibendum.\r\n                                                </ServiceText>\r\n                                            </ServiceContent>\r\n                                        </Service>\r\n                                    </ServiceCol>\r\n                                </Row>\r\n                            </Container>\r\n                    </BottomContent>\r\n                </Section>\r\n        )\r\n    }\r\n}\r\nexport default props => (\r\n    <StaticQuery\r\n      query={graphql`\r\n      query {\r\n        background: file(relativePath: {eq: \"background-poly.jpg\"}) {\r\n          childImageSharp {\r\n            fluid(maxWidth: 2000, quality: 100) {\r\n              src\r\n            }\r\n          }\r\n        }\r\n        webexpertIcon: file(relativePath: {eq: \"icons/web.png\"}) {\r\n          childImageSharp {\r\n            fluid(maxWidth: 500) {\r\n              src\r\n            }\r\n          }\r\n        }\r\n        mobileIcon: file(relativePath: {eq: \"icons/mobile.png\"}) {\r\n          childImageSharp {\r\n            fluid(maxWidth: 500) {\r\n              src\r\n            }\r\n          }\r\n        }\r\n        seoIcon: file(relativePath: {eq: \"icons/seo.png\"}) {\r\n          childImageSharp {\r\n            fluid(maxWidth: 500) {\r\n              src\r\n            }\r\n          }\r\n        }\r\n      }\r\n      `}\r\n      render={({ \r\n        background, \r\n        webexpertIcon, \r\n        mobileIcon, \r\n        seoIcon}) => <Hero  \r\n        background={background} \r\n        webexpertIcon={webexpertIcon} \r\n        mobileIcon={mobileIcon} \r\n        seoIcon={seoIcon}\r\n        {...props} />}\r\n    />\r\n  )","import React from 'react'\r\nimport Layout from 'components/layout'\r\nimport { graphql } from 'gatsby'\r\nimport Helmet from 'react-helmet'\r\nimport Hero from 'sections/hero/Hero.js'\r\nimport AboutOne from 'sections/about/AboutOne.js'\r\nimport ServicesOne from 'sections/services/ServicesOne.js'\r\nimport PortfolioOne from 'sections/portfolio/PortfolioOne.js'\r\nimport TestimonialsOne from 'sections/testimonials/TestimonialsOne.js'\r\nimport TeamOne from 'sections/team/TeamOne.js'\r\nimport ClientsOne from 'sections/clients/ClientsOne.js'\r\nimport ContactCreative from 'sections/contact/ContactCreative.js'\r\n\r\nclass Index extends React.Component {\r\n\r\n  render() {\r\n\r\n    const { site } = this.props.data\r\n\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <title>{site.meta.title}</title>\r\n          <meta name=\"description\" content={site.meta.description} />\r\n        </Helmet>\r\n        <Layout\r\n          isHome={true}\r\n          sections={['home', 'about', 'services', 'portfolio', 'testimonials', 'team', 'clients', 'contact']}\r\n        >\r\n          <Hero />\r\n          <AboutOne />\r\n          <ServicesOne />\r\n          <PortfolioOne />\r\n          <TestimonialsOne />\r\n          <TeamOne />\r\n          <ClientsOne />\r\n          <ContactCreative />\r\n        </Layout>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Index\r\n\r\nexport const creativeOneQuery = graphql`\r\n  query {\r\n    site {\r\n      meta: siteMetadata {\r\n        title\r\n        description\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}